---
swagger: '2.0'
info:
  title: API V1
  version: v1
securityDefinitions:
  api_auth:
    description: Authorization Token for API authentication
    type: apiKey
    name: Authorization
    in: header
  user_auth:
    description: Json web token for user authentication
    type: apiKey
    name: auth-token
    in: header
paths:
  "/api/v1/agreements":
    get:
      summary: Retrieves all agreements of current user
      tags:
      - Agreements
      produces:
      - application/json
      security:
      - api_auth: []
      - user_auth: []
      responses:
        '200':
          description: Agreements list
          schema:
            type: object
            properties:
              type: array
              items:
                properties:
                  id:
                    type: integer
                  content:
                    type: string
                  file:
                    type: string
                  agreement_type:
                    type: string
  "/api/v1/albums":
    get:
      summary: Retrieves all albums of current user
      tags:
      - Albums
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        type: string
      - name: per_page
        in: query
        type: string
      - name: pagination
        in: query
        type: string
      security:
      - api_auth: []
      - user_auth: []
      responses:
        '200':
          description: Albums list
          schema:
            type: object
            properties:
              albums:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    release_date:
                      type: string
                      format: date
                    artwork:
                      type: string
    post:
      summary: Create a new album
      tags:
      - Albums
      parameters:
      - name: name
        in: formData
        type: string
      - name: release_date
        in: formData
        type: date
      security:
      - api_auth: []
      - user_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: Album Created
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              release_date:
                type: string
                format: date
              artwork:
                type: string
  "/api/v1/albums/{id}":
    patch:
      summary: Update an album
      tags:
      - Albums
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: name
        in: formData
        type: string
      - name: release_date
        in: formData
        type: date
      security:
      - api_auth: []
      - user_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: Album Updated
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              release_date:
                type: string
                format: date
              artwork:
                type: string
    get:
      summary: Retrieves an album
      tags:
      - Albums
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      security:
      - api_auth: []
      - user_auth: []
      responses:
        '200':
          description: Album found
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              release_date:
                type: string
                format: date
              artwork:
                type: string
        '404':
          description: album not found
    delete:
      summary: Delete an album
      tags:
      - Albums
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      security:
      - api_auth: []
      - user_auth: []
      responses:
        '200':
          description: Album Deleted
          schema:
            type: object
            properties:
              albums:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    release_date:
                      type: string
                      format: date
                    artwork:
                      type: string
        '404':
          description: album not found
  "/api/v1/albums/{id}/update_artwork":
    patch:
      summary: Update artwork of an album
      tags:
      - Albums
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: artwork
        in: formData
        type: file
      security:
      - api_auth: []
      - user_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: Album Updated
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              release_date:
                type: string
                format: date
              artwork:
                type: string
  "/api/v1/artists_collaborators/{id}/update_status":
    patch:
      summary: Update status of artists collaborator
      tags:
      - Artists Collaborator
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: status
        in: formData
        type: string
      security:
      - api_auth: []
      - user_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: Status Updated
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                agreements:
                  type: boolean
                access:
                  type: string
                status:
                  type: string
  "/api/v1/artists_collaborators/{id}/update_access":
    patch:
      summary: Update access of artists collaborator
      tags:
      - Artists Collaborator
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: access
        in: formData
        type: string
      security:
      - api_auth: []
      - user_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: Access Updated
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                access:
                  type: string
                status:
                  type: string
  "/api/v1/artists_collaborators/{id}":
    patch:
      summary: Update artists collaborator
      tags:
      - Artists Collaborator
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: access
        in: formData
        type: string
      - name: collaborator_profile_attributes[pro]
        in: formData
        type: string
      - name: collaborator_profile_attributes[ipi]
        in: formData
        type: string
      - name: collaborator_profile_attributes[different_registered_name]
        in: formData
        type: string
      security:
      - api_auth: []
      - user_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: Collaborator Updated
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                access:
                  type: string
                status:
                  type: string
    delete:
      summary: Destroy artists collaborator
      tags:
      - Artists Collaborator
      parameters:
      - name: id
        in: path
        type: string
        required: true
      security:
      - api_auth: []
      - user_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: Collaborator deleted
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                access:
                  type: string
                status:
                  type: string
  "/api/v1/session":
    post:
      summary: create session (Sign-in)
      tags:
      - Session
      parameters:
      - name: email
        in: formData
        type: string
      - name: password
        in: formData
        type: string
      - name: remember_me
        in: formData
        type: boolean
      - name: role
        in: formData
        type: string
      security:
      - api_auth: []
      consumes:
      - multipart/form-data
      produces:
      - application/json
      responses:
        '200':
          description: created
          schema:
            type: object
            properties:
              auth-token:
                type: string
              role:
                type: string
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: http://localhost:3000
